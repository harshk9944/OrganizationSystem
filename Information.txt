
# OrganizationSystem
This is my SpringBoot backend Project
This repository contains an Organization Management System designed to manage employees and their associated countries. 
The system is built using Spring Boot and Hibernate, and it leverages a relational database to store and retrieve data. 
The application exposes RESTful APIs for various operations, including creating, reading, updating, and deleting employee and country records.

# Features
1) Employee Management: Create, read, update, and delete employee records.
2) Country Management: Manage the countries associated with employees.
3) Relationships: Establish and manage relationships between employees and their respective countries.
4) RESTful APIs: Expose endpoints for interacting with the system via HTTP requests.
5) Database Integration: Connects to a relational database using Hibernate and JPA.

# Technologies Used
1) Spring Boot: For building the backend services.
2) Hibernate: For ORM (Object-Relational Mapping).
3) JPA (Java Persistence API): For managing database interactions.
4) MySQL: As the relational database.
5) Lombok: To reduce boilerplate code for model classes.
6) Maven: For project build and dependency management.

# API Endpoints
Employee Endpoints
Get all employees: GET /api/employees
Get employee by ID: GET /api/employees/{id}
Create a new employee: POST /api/employees
Update an employee: PUT /api/employees/{id}
Delete an employee: DELETE /api/employees/{id}

Country Endpoints
Get all countries: GET /api/countries
Get country by ID: GET /api/countries/{id}
Create a new country: POST /api/countries
Update a country: PUT /api/countries/{id}
Delete a country: DELETE /api/countries/{id}
